[{"/Users/richardlu/Documents/GitHub projects/chess-card/src/index.tsx":"1","/Users/richardlu/Documents/GitHub projects/chess-card/src/reportWebVitals.ts":"2","/Users/richardlu/Documents/GitHub projects/chess-card/src/App.tsx":"3","/Users/richardlu/Documents/GitHub projects/chess-card/src/sketch.tsx":"4","/Users/richardlu/Documents/GitHub projects/chess-card/src/components/TextInput/TextInput.tsx":"5","/Users/richardlu/Documents/GitHub projects/chess-card/src/components/Footer/Footer.tsx":"6","/Users/richardlu/Documents/GitHub projects/chess-card/src/components/Description.tsx":"7","/Users/richardlu/Documents/GitHub projects/chess-card/src/components/Canvas/canvas.tsx":"8","/Users/richardlu/Documents/GitHub projects/chess-card/src/components/CardCustomization.tsx":"9","/Users/richardlu/Documents/GitHub projects/chess-card/src/components/RadioButtonGroup/RadioButtonGroup.tsx":"10","/Users/richardlu/Documents/GitHub projects/chess-card/src/components/RadioButtonGroup/RadioButton.tsx":"11","/Users/richardlu/Documents/GitHub projects/chess-card/src/components/TextInput/Button.tsx":"12","/Users/richardlu/Documents/GitHub projects/chess-card/src/components/types.ts":"13","/Users/richardlu/Documents/GitHub projects/chess-card/src/components/RadioButtonGroup/ColorIcon/ColorIcon.ts":"14","/Users/richardlu/Documents/GitHub projects/chess-card/src/components/RadioButtonGroup/ColorIcon/IconRadioButton.ts":"15","/Users/richardlu/Documents/GitHub projects/chess-card/src/components/RadioButtonGroup/ColorIcon/ColorRadioButton.tsx":"16"},{"size":500,"mtime":1607062231617,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":1607062231618,"results":"19","hashOfConfig":"18"},{"size":748,"mtime":1608883871160,"results":"20","hashOfConfig":"18"},{"size":1612,"mtime":1608003440215,"results":"21","hashOfConfig":"18"},{"size":879,"mtime":1608102212173,"results":"22","hashOfConfig":"18"},{"size":913,"mtime":1608268344877,"results":"23","hashOfConfig":"18"},{"size":394,"mtime":1608268741422,"results":"24","hashOfConfig":"18"},{"size":4947,"mtime":1609400849712,"results":"25","hashOfConfig":"18"},{"size":5261,"mtime":1609742857846,"results":"26","hashOfConfig":"18"},{"size":1753,"mtime":1609742688733,"results":"27","hashOfConfig":"18"},{"size":1587,"mtime":1609742151753,"results":"28","hashOfConfig":"18"},{"size":2120,"mtime":1609373790147,"results":"29","hashOfConfig":"18"},{"size":246,"mtime":1609396534527,"results":"30","hashOfConfig":"18"},{"size":848,"mtime":1609741720214,"results":"31","hashOfConfig":"18"},{"size":571,"mtime":1609734994838,"results":"32","hashOfConfig":"18"},{"size":1022,"mtime":1609742801545,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"jgziwi",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/richardlu/Documents/GitHub projects/chess-card/src/index.tsx",[],["71","72"],"/Users/richardlu/Documents/GitHub projects/chess-card/src/reportWebVitals.ts",[],"/Users/richardlu/Documents/GitHub projects/chess-card/src/App.tsx",[],"/Users/richardlu/Documents/GitHub projects/chess-card/src/sketch.tsx",["73"],"import React from \"react\"\nimport Sketch from \"react-p5\"\nimport p5Types from 'p5'\n\ntype ChessCardProps = {\n    // parentRef: React.Ref<HTMLDivElement>,\n\n    username: string,\n    ratings: {}[],\n\n    colorScheme: 'w'|'b'|'bw'|'wb'|undefined,\n    icon: string | undefined,\n}\n\nconst ChessCard: React.FC<ChessCardProps> = ({username, ratings, colorScheme, icon}: ChessCardProps) => {\n    const user = '@' + username\n    \n    let overpassRegular: p5Types.Font, \n        overpassBlack: p5Types.Font,\n        lichess: p5Types.Font\n\n    const preload = (p5: p5Types) => {\n        overpassRegular = p5.loadFont(`${process.env.PUBLIC_URL}/fonts/Overpass-Regular.ttf`)\n        overpassBlack = p5.loadFont(`${process.env.PUBLIC_URL}/fonts/Overpass-Black.ttf`)\n        lichess = p5.loadFont(\"http://db.onlinewebfonts.com/t/1926835283cbd17d05331a50e3039ada.ttf\")\n    }\n\n    const setup = (p5: p5Types, canvasParentRef: Element) => {\n        console.log(username)\n        p5.createCanvas(320, 320).parent(canvasParentRef)\n        p5.colorMode(p5.HSL)\n        p5.noStroke()\n\n        p5.fill('green')\n        p5.background(p5.color(0, 100, 0, 0))\n        p5.rect(0, 0, 320, 320, 10, 10, 10, 10)\n        p5.fill('black')\n        p5.rect(0, p5.height * (2/3), p5.width, p5.height / 3)\n\n        p5.textFont(overpassRegular)\n        p5.textSize(32)\n        p5.fill(0, 102, 153)\n        p5.text(user, 20, 250)\n\n        // Format text\n        p5.textFont(lichess)\n        p5.text('T', 50, 50)\n    }\n\n    const draw = (p5: p5Types) => {\n    }\n\n    return <Sketch preload={preload} setup={setup} draw={draw} />\n}\n\nexport default ChessCard",["74","75"],"/Users/richardlu/Documents/GitHub projects/chess-card/src/components/TextInput/TextInput.tsx",[],"/Users/richardlu/Documents/GitHub projects/chess-card/src/components/Footer/Footer.tsx",[],"/Users/richardlu/Documents/GitHub projects/chess-card/src/components/Description.tsx",["76"],"import React from 'react'\n\nfunction Description() {\n    return (\n        <div>\n          <p><a className=\"hover:underline hover:text-color-blue\" href=\"#\">How does it work?</a></p>\n          <p className=\"hidden\">I ask the <a href=\"https://lichess.org/api\">Lichess API</a> to send me data about your ratings. It's all publicly accessible. </p>\n        </div>\n    )\n}\n\nexport default Description\n","/Users/richardlu/Documents/GitHub projects/chess-card/src/components/Canvas/canvas.tsx",["77"],"import React from 'react'\nimport Konva from 'konva'\nimport { Stage, Layer, Rect, Text, Group, Image } from 'react-konva'\nimport useImage from 'use-image'\nimport { LichessRating, CardColorState, CardIconState } from '../types'\n\ntype IconProps = {\n    x: number,\n    y: number,\n    icon: string,\n}\nconst PieceIcon = ({ x, y, icon }: IconProps) => {\n    const [image] = useImage(icon)\n    if (image === undefined) console.log(\"Image was undefined. God damn it.\")\n    return <Image image={image} x={x} y={y} offsetX={50} offsetY={50} />\n}\n\n/**\n * Returns the coresponding icon for a given time control/game type.\n * The returned icon should be rendered in the Lichess font.\n * @param name the name of the time control\n */\nconst getRatingIcon = (name: string) => {\n    const check = name.toLowerCase()\n    switch (check) {\n        case 'bullet':\n            return 'T'\n        case 'blitz':\n            return ')'\n        case 'rapid':\n            return '#'\n    }\n}\n\ntype RatingTextProps = {\n    ratings: LichessRating[]\n    x: number,\n    y: number,\n    fill: string,\n}\n/**\n * @param ratings\n */\nconst RatingText = ({ ratings, x, y, fill }: RatingTextProps ) => {\n    const ratingTextRef = React.useRef<Konva.Group>(null!)\n    const textProps = {\n        fontFamily: 'Overpass',\n        fontSize: 16,\n        fill,\n        y: y\n    }\n    return(\n        <Group\n            ref={ratingTextRef}\n            offsetX={ratingTextRef.current ? ratingTextRef.current.getClientRect().width / 2 : 0}\n        >\n            {\n                ratings.map((rating, i) => {\n                    const newX = x + (i * 80)   // positioning of ratings\n                    console.log('i: ' + i, 'x: ' + newX, 'y: ' + y )\n                    return (\n                        <Group key={rating.name} x={newX}>\n                            <Text {...textProps} fontFamily=\"lichess\" text={getRatingIcon(rating.name)}/>\n                            <Text {...textProps} x={18} text={rating.points[0][3].toString()}/>\n                        </Group>\n                    )\n                })\n            }\n        </Group>\n    )\n}\n\n// function from https://stackoverflow.com/a/15832662/512042\nfunction downloadURI(uri: string, name: string) {\n    var link = document.createElement('a');\n    link.download = name;\n    link.href = uri;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n}\n\ntype CardProps = {\n    username: string,\n    ratings: LichessRating[],\n    color: CardColorState,\n    icon?: CardIconState | undefined,\n}\n\nexport default function Canvas({ username=\"Your username\", ratings, color, icon='' }: CardProps) {\n    const stageRef = React.useRef<Konva.Stage>(null!)\n    const CARD_WIDTH = 320\n    const background = color instanceof Array ? color[0] : color\n    const foreground = color instanceof Array ? color[1] : color\n\n    /**\n     * handle downloading of image\n     */\n    const handleExport = () => {\n        const uri = stageRef.current.toDataURL();\n        console.log(uri);\n        downloadURI(uri, 'stage.png');\n    };\n\n    const usernameRef = React.useRef<Konva.Text>(null!)\n\n    React.useEffect(() => {\n\n    }, [])\n\n    return (\n        <Stage\n            ref={stageRef}\n            width={CARD_WIDTH}\n            height={CARD_WIDTH}\n        >\n            <Layer>\n                <Rect\n                    x={0}\n                    y={0}\n                    width={CARD_WIDTH}\n                    height={CARD_WIDTH}\n                    fill={background}\n                    cornerRadius={10}\n                />\n                <PieceIcon\n                    x={CARD_WIDTH / 2}\n                    y={CARD_WIDTH / 3}\n                    icon={icon}\n                />\n            </Layer>\n            <Layer>\n                <Rect \n                    x={0}\n                    y={CARD_WIDTH * 2 / 3}\n                    width={CARD_WIDTH}\n                    height={CARD_WIDTH / 3}\n                    fill={foreground}\n                    cornerRadius={[0, 0, 10, 10]}\n                />\n                <Group>\n                    <Text\n                        ref={usernameRef}\n                        fontFamily=\"Overpass\"\n                        fontStyle=\"bold\"\n                        fontWeight={900}\n                        text={username && '@' + username}\n                        x={CARD_WIDTH / 2}\n                        y={230}\n                        fill={foreground === \"#EFEFEF\" ? \"#212121\" : \"#EFEFEF\"}\n                        align=\"center\"\n                        offsetX={usernameRef.current ? usernameRef.current.getTextWidth() / 2 : 0}  // sets origin point to center of element to allow for horizontal centering\n                        fontSize={28}\n                    />\n                    <RatingText ratings={ratings} x={CARD_WIDTH / 2} y={280} fill={foreground === \"#EFEFEF\" ? \"#212121\" : \"#EFEFEF\"} />\n                </Group>\n            </Layer>\n        </Stage>\n    )\n}\n","/Users/richardlu/Documents/GitHub projects/chess-card/src/components/CardCustomization.tsx",["78","79","80"],"/Users/richardlu/Documents/GitHub projects/chess-card/src/components/RadioButtonGroup/RadioButtonGroup.tsx",["81"],"/Users/richardlu/Documents/GitHub projects/chess-card/src/components/RadioButtonGroup/RadioButton.tsx",["82"],"/Users/richardlu/Documents/GitHub projects/chess-card/src/components/TextInput/Button.tsx",[],"/Users/richardlu/Documents/GitHub projects/chess-card/src/components/types.ts",[],"/Users/richardlu/Documents/GitHub projects/chess-card/src/components/RadioButtonGroup/ColorIcon/ColorIcon.ts",[],"/Users/richardlu/Documents/GitHub projects/chess-card/src/components/RadioButtonGroup/ColorIcon/IconRadioButton.ts",[],"/Users/richardlu/Documents/GitHub projects/chess-card/src/components/RadioButtonGroup/ColorIcon/ColorRadioButton.tsx",["83","84"],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":24,"column":9,"nodeType":"91","messageId":"92","endLine":24,"endColumn":22},{"ruleId":"85","replacedBy":"93"},{"ruleId":"87","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":6,"column":14,"nodeType":"97","endLine":6,"endColumn":76},{"ruleId":"89","severity":1,"message":"98","line":99,"column":11,"nodeType":"91","messageId":"92","endLine":99,"endColumn":23},{"ruleId":"89","severity":1,"message":"99","line":10,"column":10,"nodeType":"91","messageId":"92","endLine":10,"endColumn":26},{"ruleId":"89","severity":1,"message":"100","line":23,"column":12,"nodeType":"91","messageId":"92","endLine":23,"endColumn":16},{"ruleId":"89","severity":1,"message":"101","line":23,"column":18,"nodeType":"91","messageId":"92","endLine":23,"endColumn":25},{"ruleId":"89","severity":1,"message":"102","line":26,"column":27,"nodeType":"91","messageId":"92","endLine":26,"endColumn":30},{"ruleId":"89","severity":1,"message":"103","line":10,"column":30,"nodeType":"91","messageId":"92","endLine":10,"endColumn":31},{"ruleId":"89","severity":1,"message":"104","line":4,"column":26,"nodeType":"91","messageId":"92","endLine":4,"endColumn":37},{"ruleId":"89","severity":1,"message":"105","line":11,"column":11,"nodeType":"91","messageId":"92","endLine":11,"endColumn":20},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"@typescript-eslint/no-unused-vars","'overpassBlack' is assigned a value but never used.","Identifier","unusedVar",["106"],["107"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'handleExport' is assigned a value but never used.","'colorRadioButton' is defined but never used.","'test' is assigned a value but never used.","'setTest' is assigned a value but never used.","'crb' is assigned a value but never used.","'T' is defined but never used.","'CustomRadio' is defined but never used.","'mainColor' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]