[{"/Users/richardlu/Documents/GitHub projects/chess-card/src/index.tsx":"1","/Users/richardlu/Documents/GitHub projects/chess-card/src/reportWebVitals.ts":"2","/Users/richardlu/Documents/GitHub projects/chess-card/src/App.tsx":"3","/Users/richardlu/Documents/GitHub projects/chess-card/src/sketch.tsx":"4","/Users/richardlu/Documents/GitHub projects/chess-card/src/components/TextInput/TextInput.tsx":"5","/Users/richardlu/Documents/GitHub projects/chess-card/src/components/Footer/Footer.tsx":"6","/Users/richardlu/Documents/GitHub projects/chess-card/src/components/Canvas/canvas.tsx":"7","/Users/richardlu/Documents/GitHub projects/chess-card/src/components/CardCustomization.tsx":"8","/Users/richardlu/Documents/GitHub projects/chess-card/src/components/RadioButtonGroup/RadioButtonGroup.tsx":"9","/Users/richardlu/Documents/GitHub projects/chess-card/src/components/RadioButtonGroup/RadioButton.tsx":"10","/Users/richardlu/Documents/GitHub projects/chess-card/src/components/TextInput/Button.tsx":"11","/Users/richardlu/Documents/GitHub projects/chess-card/src/components/RadioButtonGroup/ColorIcon/ColorIcon.ts":"12","/Users/richardlu/Documents/GitHub projects/chess-card/src/components/RadioButtonGroup/ColorIcon/IconRadioButton.ts":"13","/Users/richardlu/Documents/GitHub projects/chess-card/src/components/Canvas/useCenteredOffset.ts":"14","/Users/richardlu/Documents/GitHub projects/chess-card/src/components/routes.tsx":"15","/Users/richardlu/Documents/GitHub projects/chess-card/src/components/Header/Header.tsx":"16","/Users/richardlu/Documents/GitHub projects/chess-card/src/components/AboutPage.tsx":"17","/Users/richardlu/Documents/GitHub projects/chess-card/src/components/Modal/Modal.tsx":"18","/Users/richardlu/Documents/GitHub projects/chess-card/src/components/Canvas/IGStory.tsx":"19"},{"size":500,"mtime":1607062231617,"results":"20","hashOfConfig":"21"},{"size":425,"mtime":1607062231618,"results":"22","hashOfConfig":"21"},{"size":227,"mtime":1610649761917,"results":"23","hashOfConfig":"21"},{"size":1612,"mtime":1608003440215,"results":"24","hashOfConfig":"21"},{"size":879,"mtime":1610589801890,"results":"25","hashOfConfig":"21"},{"size":1043,"mtime":1610595718294,"results":"26","hashOfConfig":"21"},{"size":7251,"mtime":1611015459090,"results":"27","hashOfConfig":"21"},{"size":5486,"mtime":1610929730918,"results":"28","hashOfConfig":"21"},{"size":1659,"mtime":1609742930947,"results":"29","hashOfConfig":"21"},{"size":1575,"mtime":1610593551686,"results":"30","hashOfConfig":"21"},{"size":2120,"mtime":1609373790147,"results":"31","hashOfConfig":"21"},{"size":848,"mtime":1609741720214,"results":"32","hashOfConfig":"21"},{"size":571,"mtime":1609734994838,"results":"33","hashOfConfig":"21"},{"size":840,"mtime":1610058624043,"results":"34","hashOfConfig":"21"},{"size":623,"mtime":1610593155558,"results":"35","hashOfConfig":"21"},{"size":415,"mtime":1610065103143,"results":"36","hashOfConfig":"21"},{"size":346,"mtime":1610595815756,"results":"37","hashOfConfig":"21"},{"size":5087,"mtime":1610923643411,"results":"38","hashOfConfig":"21"},{"size":597,"mtime":1610746298916,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"jgziwi",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},"/Users/richardlu/Documents/GitHub projects/chess-card/src/index.tsx",[],["85","86"],"/Users/richardlu/Documents/GitHub projects/chess-card/src/reportWebVitals.ts",[],"/Users/richardlu/Documents/GitHub projects/chess-card/src/App.tsx",[],"/Users/richardlu/Documents/GitHub projects/chess-card/src/sketch.tsx",["87"],"import React from \"react\"\nimport Sketch from \"react-p5\"\nimport p5Types from 'p5'\n\ntype ChessCardProps = {\n    // parentRef: React.Ref<HTMLDivElement>,\n\n    username: string,\n    ratings: {}[],\n\n    colorScheme: 'w'|'b'|'bw'|'wb'|undefined,\n    icon: string | undefined,\n}\n\nconst ChessCard: React.FC<ChessCardProps> = ({username, ratings, colorScheme, icon}: ChessCardProps) => {\n    const user = '@' + username\n    \n    let overpassRegular: p5Types.Font, \n        overpassBlack: p5Types.Font,\n        lichess: p5Types.Font\n\n    const preload = (p5: p5Types) => {\n        overpassRegular = p5.loadFont(`${process.env.PUBLIC_URL}/fonts/Overpass-Regular.ttf`)\n        overpassBlack = p5.loadFont(`${process.env.PUBLIC_URL}/fonts/Overpass-Black.ttf`)\n        lichess = p5.loadFont(\"http://db.onlinewebfonts.com/t/1926835283cbd17d05331a50e3039ada.ttf\")\n    }\n\n    const setup = (p5: p5Types, canvasParentRef: Element) => {\n        console.log(username)\n        p5.createCanvas(320, 320).parent(canvasParentRef)\n        p5.colorMode(p5.HSL)\n        p5.noStroke()\n\n        p5.fill('green')\n        p5.background(p5.color(0, 100, 0, 0))\n        p5.rect(0, 0, 320, 320, 10, 10, 10, 10)\n        p5.fill('black')\n        p5.rect(0, p5.height * (2/3), p5.width, p5.height / 3)\n\n        p5.textFont(overpassRegular)\n        p5.textSize(32)\n        p5.fill(0, 102, 153)\n        p5.text(user, 20, 250)\n\n        // Format text\n        p5.textFont(lichess)\n        p5.text('T', 50, 50)\n    }\n\n    const draw = (p5: p5Types) => {\n    }\n\n    return <Sketch preload={preload} setup={setup} draw={draw} />\n}\n\nexport default ChessCard",["88","89"],"/Users/richardlu/Documents/GitHub projects/chess-card/src/components/TextInput/TextInput.tsx",[],"/Users/richardlu/Documents/GitHub projects/chess-card/src/components/Footer/Footer.tsx",[],"/Users/richardlu/Documents/GitHub projects/chess-card/src/components/Canvas/canvas.tsx",[],"/Users/richardlu/Documents/GitHub projects/chess-card/src/components/CardCustomization.tsx",[],"/Users/richardlu/Documents/GitHub projects/chess-card/src/components/RadioButtonGroup/RadioButtonGroup.tsx",["90"],"import * as React from 'react'\nimport RadioButton, { RadioValue, HTMLInputValue } from './RadioButton'\nimport { CustomRadio } from '../types'\n\ninterface RadioButtonGroupProps<Value> {\n    name: string,\n    label: string,\n    values: RadioValue<Value>[],\n    onChange: (val: HTMLInputValue) => void\n    customRadioButton?: CustomRadio | ((isActive: boolean, value: any) => CustomRadio)\n}\n\nconst RadioButtonGroup = <T,>({name, label, values, onChange, customRadioButton}: RadioButtonGroupProps<T>) => {\n    const [activeButton, setActiveButton] = React.useState<HTMLInputValue>('')\n    return(\n        <fieldset id={`${name}-form`} name={name}>\n            <legend className=\"block mb-2 text-lg\">\n                {label}\n            </legend>\n            {\n                values.map(v => {\n                    const { key, value } = v\n                    const inputId = `${name}-radio--${key}`\n                    const isActive = inputId === activeButton\n                    const crb = typeof customRadioButton === 'function' ? customRadioButton(isActive, value) : customRadioButton\n                    return(\n                        <RadioButton\n                            key={inputId}\n                            name={name}\n                            value={key}\n                            onChange={onChange}\n                            isActive={isActive}\n                            setActive={setActiveButton}\n                            id={inputId}\n                            customRadioButton={crb}\n                        />\n                    )\n                })\n            }\n        </fieldset>\n    )\n}\n\nexport default RadioButtonGroup","/Users/richardlu/Documents/GitHub projects/chess-card/src/components/RadioButtonGroup/RadioButton.tsx",[],"/Users/richardlu/Documents/GitHub projects/chess-card/src/components/TextInput/Button.tsx",[],"/Users/richardlu/Documents/GitHub projects/chess-card/src/components/RadioButtonGroup/ColorIcon/ColorIcon.ts",[],"/Users/richardlu/Documents/GitHub projects/chess-card/src/components/RadioButtonGroup/ColorIcon/IconRadioButton.ts",[],"/Users/richardlu/Documents/GitHub projects/chess-card/src/components/Canvas/useCenteredOffset.ts",[],"/Users/richardlu/Documents/GitHub projects/chess-card/src/components/routes.tsx",["91"],"import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\";\nimport Header from \"./Header/Header\";\nimport Footer from './Footer/Footer';\nimport CardCustomization from './CardCustomization';\nimport AboutPage from './AboutPage';\n\nconst Routes = () => (  \n    <Router>\n        <Header />\n        <Switch>\n            <Route exact path=\"/\">\n                <CardCustomization />\n            </Route>\n            <Route path=\"/about\">\n                <AboutPage />\n            </Route>\n        </Switch>\n        <Footer />\n    </Router>\n);\n\nexport default Routes;","/Users/richardlu/Documents/GitHub projects/chess-card/src/components/Header/Header.tsx",[],"/Users/richardlu/Documents/GitHub projects/chess-card/src/components/AboutPage.tsx",[],"/Users/richardlu/Documents/GitHub projects/chess-card/src/components/Modal/Modal.tsx",["92"],"/Users/richardlu/Documents/GitHub projects/chess-card/src/components/Canvas/IGStory.tsx",["93","94","95","96","97","98"],"import React from 'react'\nimport Konva from 'konva'\nimport { Stage, Layer, Rect, Text, Group, Image } from 'react-konva'\nimport { CardColorState } from '../types'\nimport Canvas from './canvas'\n\ninterface IGStoryProps {\n    width: number,\n    height: number,\n    color: CardColorState,\n}\n\nconst IGStory = ({width, height, color}: IGStoryProps) => {\n\n    return (\n        <Layer>\n            <Rect\n                x={0}\n                y={0}\n                width={width}\n                height={height}\n                fill=\"#212121\"\n            />\n        </Layer>\n    )\n}\n\nexport default IGStory\n",["99","100"],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":24,"column":9,"nodeType":"107","messageId":"108","endLine":24,"endColumn":22},{"ruleId":"101","replacedBy":"109"},{"ruleId":"103","replacedBy":"110"},{"ruleId":"105","severity":1,"message":"111","line":26,"column":27,"nodeType":"107","messageId":"108","endLine":26,"endColumn":30},{"ruleId":"105","severity":1,"message":"112","line":6,"column":5,"nodeType":"107","messageId":"108","endLine":6,"endColumn":9},{"ruleId":"105","severity":1,"message":"113","line":16,"column":12,"nodeType":"107","messageId":"108","endLine":16,"endColumn":14},{"ruleId":"105","severity":1,"message":"114","line":2,"column":8,"nodeType":"107","messageId":"108","endLine":2,"endColumn":13},{"ruleId":"105","severity":1,"message":"115","line":3,"column":10,"nodeType":"107","messageId":"108","endLine":3,"endColumn":15},{"ruleId":"105","severity":1,"message":"116","line":3,"column":30,"nodeType":"107","messageId":"108","endLine":3,"endColumn":34},{"ruleId":"105","severity":1,"message":"117","line":3,"column":36,"nodeType":"107","messageId":"108","endLine":3,"endColumn":41},{"ruleId":"105","severity":1,"message":"118","line":3,"column":43,"nodeType":"107","messageId":"108","endLine":3,"endColumn":48},{"ruleId":"105","severity":1,"message":"119","line":5,"column":8,"nodeType":"107","messageId":"108","endLine":5,"endColumn":14},{"ruleId":"101","replacedBy":"120"},{"ruleId":"103","replacedBy":"121"},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"@typescript-eslint/no-unused-vars","'overpassBlack' is assigned a value but never used.","Identifier","unusedVar",["122"],["123"],"'crb' is assigned a value but never used.","'Link' is defined but never used.","'bg' is assigned a value but never used.","'Konva' is defined but never used.","'Stage' is defined but never used.","'Text' is defined but never used.","'Group' is defined but never used.","'Image' is defined but never used.","'Canvas' is defined but never used.",["122"],["123"],"no-global-assign","no-unsafe-negation"]